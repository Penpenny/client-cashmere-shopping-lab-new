{"version":3,"sources":["ng://shopping-library/lib/shopping-library.service.ts","ng://shopping-library/lib/shopping-library.component.ts","ng://shopping-library/lib/shopping-library.module.ts"],"names":["ShoppingLibraryService","http","router","this","data","field","operator","value","prototype","setUrl","url","serverUrl","onSignIn","post","email","password","pipe","map","response","onRegister","userdata","getProducts","get","getRandomProduct","id","getProductById","getKitchenProducts","inputData","console","log","table","userLogin","sharePasswordLink","userSignup","userData","Headers","append","username","first_name","last_name","mobile_phone","mobile_number","organization_name","getUserDetails","user_id","editUserProfile","put","addNewVehicle","vehicleMark","vehicleModel","vehicleColor","vehicleNumPlate","vehicle","organization_id","vrn","vehicle_type","make","model","year","color","getAllUserVehicles","u_id","localStorage","getItem","editUserVehicle","getVehicleById","deleteUserVehicle","delete","subscribe","err","getHeader","headers","HttpHeaders","Accept","Content-Type","Authorization","createSalesOrder","length","order","merchant_id","merchantId","shipping_date","pos","send_confirmation","create_bol","estimated_delivery_date","res","getOrderGuideData","getCustomersProducts","getAllMerchants","Injectable","args","providedIn","HttpClient","Router","ShoppingLibraryComponent","ngOnInit","Component","selector","template","ShoppingLibraryModule","NgModule","declarations","imports","HttpClientModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// import 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n// import { RequestOptions, Headers, Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingLibraryService {\n  serverUrl: string;\n  // private httpDep: Http\n  constructor(private http: HttpClient, private router: Router) { }\n  data = {\n    field: '',\n    operator: '',\n    value: ''\n  };\n  setUrl(url) {\n    this.serverUrl = url;\n  }\n\n  onSignIn(data) {\n    return this.http\n      .post(`${this.serverUrl}/api/v1/auth/login`, {\n        email: data.email,\n        password: data.password\n      })\n      .pipe(map(response => response));\n  }\n\n  onRegister(userdata) {\n    return this.http\n      .post(`${this.serverUrl}/api/v1/auth/signup`, userdata)\n      .pipe(map(response => response));\n  }\n\n  getProducts() {\n    return this.http\n      .get(\n        `${\n        this.serverUrl\n        }/api/v1/products?filters=[{\"field\":\"id\",\"table\":\"product\",\"operator\":\"<\",\"value\":\"\"}]`\n      )\n      .pipe(map(response => response));\n  }\n\n  getRandomProduct(id) {\n    return this.http\n      .get(\n        `${\n        this.serverUrl\n        }/api/v1/products?filters=[{\"field\":\"id\",\"table\":\"product\",\"operator\":\"<\",\"value\":\"${id}\"}]`\n      )\n      .pipe(map(response => response));\n  }\n\n  getProductById(id) {\n    return this.http\n      .get(\n        `${\n        this.serverUrl\n        }/api/v1/products?filters=[{\"field\":\"id\",\"table\":\"product\",\"operator\":\"=\",\"value\":\"${id}\"}]`\n      )\n      .pipe(map(response => response));\n  }\n\n  getKitchenProducts(inputData) {\n    let data = inputData.data;\n    console.log(data);\n    console.log(this.serverUrl);\n    return this.http\n      .get(\n        `${this.serverUrl}/api/v1/products?filters=[{\n      \"field\":\"${data.field}\",\n      \"table\":\"${data.table}\",\n      \"operator\":\"${data.operator}\",\n      \"value\":\"${data.value}\"\n    }]`\n      )\n      .pipe(map(response => response));\n  }\n\n\n  /* parking app start */\n\n\n  ///////////// START auth service ////////////\n  userLogin(email: string, password: string) {\n    return this.http\n      .post(this.serverUrl + '/auth/login', {\n        email: email,\n        password: password\n      }).pipe(map(response => response));\n  }\n\n  sharePasswordLink(email: string) {\n    return this.http\n      .post(this.serverUrl + '/auth/passwordReset', { email: email }).pipe(map(response => response));\n  }\n\n\n  userSignup(userData) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post(this.serverUrl + '/auth/signup', {\n        email: userData.email,\n        password: userData.password,\n        username: userData.username,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        mobile_phone: userData.mobile_number,\n        organization_name: userData.organization_name\n      }).pipe(map(response => response));\n  }\n  ///////////// auth service END ////////////\n\n\n\n  ///////////// START user service ////////////\n\n  getUserDetails(user_id) {\n    return this.http\n      .get(`${this.serverUrl}/users/${user_id}`)\n      .pipe(map(response => response));\n  }\n\n  editUserProfile(data, user_id) {\n    // const user_id = localStorage.getItem('user_id');\n    return this.http\n      .put(`${this.serverUrl}/users/${user_id}`, {\n        first_name: data.first_name,\n        last_name: data.last_name,\n        mobile_phone: data.mobile_phone,\n        email: data.email\n      })\n      .pipe(map(response => response));\n  }\n\n  ///////////// user service END ////////////\n\n\n  ///////////// START vehicle service ////////////\n\n  addNewVehicle(\n    vehicleMark: string,\n    vehicleModel: string,\n    vehicleColor: string,\n    vehicleNumPlate: string,\n    user_id\n  ) {\n    const vehicle = {\n      user_id: user_id,\n      organization_id: 291,\n      vrn: vehicleNumPlate,\n      vehicle_type: 'rental',\n      make: vehicleMark,\n      model: vehicleModel,\n      year: 2019,\n      color: vehicleColor\n    };\n    const headers = new Headers();\n    // headers.append('auth-token', '-YAUq5gbMX91YpAgAdQAtWiJCSK0AGUD');\n    vehicle.user_id = user_id;\n    // const options = new RequestOptions({ headers: headers });\n    // .post(this.serverUrl + '/vehicles', vehicle, this.getHeader())\n    return this.http\n      .post(this.serverUrl + '/vehicles', vehicle)\n      .pipe(map(response => response));\n  }\n\n\n  getAllUserVehicles() {\n    const headers = new Headers();\n    // let id = localStorage.getItem('user_id');\n    const u_id = localStorage.getItem('user_id');\n    // headers.append('auth-token', '-YAUq5gbMX91YpAgAdQAtWiJCSK0AGUD');\n    // const options = new RequestOptions({ headers: headers });\n    return this.http\n      .get(this.serverUrl + `/vehicles/user/${u_id}`)\n      .pipe(map(response => response));\n  }\n\n\n  editUserVehicle(data, u_id) {\n    const user_id = u_id;\n    // const headers = new Headers();\n    // headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    // const options = new RequestOptions({ headers: headers });\n    return this.http\n      .put(`${this.serverUrl}/vehicles/${data.id}`, {\n        user_id: user_id,\n        organization_id: 291,\n        vrn: data.vrn,\n        vehicle_type: 'rental',\n        make: data.make,\n        model: data.model,\n        year: 2019,\n        color: data.color\n      })\n      .pipe(map(response => response));\n  }\n\n  getVehicleById(data) {\n    return this.http\n      .get(`${this.serverUrl}/vehicles/` + data.id)\n      .pipe(map(response => response));\n  }\n\n\n  deleteUserVehicle(id) {\n    this.http.delete(`${this.serverUrl}/vehicles/${id}`).subscribe(\n      data => { },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  ///////////// vehicle service END ////////////\n\n  /* parking app end */\n\n  getHeader() {\n    const aToken = '-YAUq5gbMX91YpAgAdQAtWiJCSK0AGUD';\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept': 'application/x-www-form-urlencoded',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${aToken}`\n      })\n    };\n\n    return httpOptions;\n  }\n\n\n  //////////////// START Create Sales Order ///////////////\n\n  /////////// START api service ////////////\n\n  createSalesOrder(data) {\n    console.log('syncing');\n    if (data.length !== 0) {\n      this.data['order_item'] = data[0].order;\n      this.data['Order'].merchant_id = data[0].merchantId;\n      this.data['Order'].shipping_date = data[0].shipping_date;\n      this.data['Order'].pos = data[0].pos;\n      this.data['Order'].send_confirmation = data[0].send_confirmation;\n      this.data['Order'].create_bol = data[0].create_bol;\n\n      if (data[0].estimated_delivery_date) {\n        this.data['Order'].estimated_delivery_date = data[0].estimated_delivery_date;\n      }\n      return this.http\n        .post(`${this.serverUrl}/api/v1/order/default/create`, this.data)\n        .pipe(\n          map(res => {\n            return res;\n          })\n        );\n    }\n  }\n\n\n  getOrderGuideData(id) {\n    return this.http.get(`${this.serverUrl}/api/v1/products/merchant/${id}?limit=15`).pipe(map(res => {\n      return res;\n    }));\n  }\n\n  /////////// api service END ////////////\n\n\n  ////////// product service END /////////\n  getCustomersProducts() {\n    return this.http.get(`${this.serverUrl}/api/v1/products?offset=0&limit=10000`).pipe(\n      map((response: Response) => {\n        return response;\n      })\n    );\n  }\n\n  getAllMerchants() {\n    return this.http.get(`${this.serverUrl}/api/v1/merchants?offset=0&limit=10000`).pipe(\n      map((response: Response) => {\n        return response;\n      })\n    );\n  }\n\n  ////////// product service END /////////\n\n  //////////////// Create Sales Order END ///////////////\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sl-shopping-library',\n  template: `\n    <p>\n      shopping-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class ShoppingLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ShoppingLibraryComponent } from './shopping-library.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [ShoppingLibraryComponent],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [ShoppingLibraryComponent]\n})\nexport class ShoppingLibraryModule { }\n"]}